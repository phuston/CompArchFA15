$date
	Tue Sep 22 00:41:26 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testFullAdder $end
$var wire 1 ! carryout $end
$var wire 1 " sum $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % carryin $end
$scope module adder $end
$var wire 1 & a $end
$var wire 1 ' aANDb $end
$var wire 1 ( aANDbXORc $end
$var wire 1 ) aANDc $end
$var wire 1 * aANDnbXORc $end
$var wire 1 + b $end
$var wire 1 , bANDc $end
$var wire 1 - bXORc $end
$var wire 1 . carryin $end
$var wire 1 ! carryout $end
$var wire 1 / na $end
$var wire 1 0 nb $end
$var wire 1 1 nbXORc $end
$var wire 1 " sum $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
z1
z0
z/
0.
z-
z,
0+
z*
z)
x(
z'
0&
0%
0$
0#
x"
x!
$end
#50
0'
0)
0,
0*
0-
1/
10
#100
0!
11
0(
#150
0"
#1000
1%
1.
#1050
1-
#1100
01
1(
#1150
1"
#2000
0%
0.
1$
1+
#2050
00
#3000
1%
1.
#3050
0-
1,
#3100
11
0(
1!
#3150
0"
#4000
0%
0.
0$
0+
1#
1&
#4050
10
0,
0/
1*
#4100
0!
1"
#5000
1%
1.
#5050
1-
1)
#5100
01
1!
#5150
0*
#5200
0"
#6000
0%
0.
1$
1+
#6050
0)
00
1'
#7000
1%
1.
#7050
0-
1,
1)
#7100
11
#7150
1*
#7200
1"
#8000
